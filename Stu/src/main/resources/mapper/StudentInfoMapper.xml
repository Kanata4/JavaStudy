<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geekaca.stu.mapper.StudentInfoMapper">

    <resultMap id="BaseResultMap" type="com.geekaca.stu.domain.StudentInfo">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="password" column="password" jdbcType="VARCHAR"/>
            <result property="gender" column="gender" jdbcType="VARCHAR"/>
            <result property="age" column="age" jdbcType="INTEGER"/>
            <result property="code" column="code" jdbcType="INTEGER"/>
            <result property="classId" column="class_id" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,name,password,
        gender,age,code,
        class_id
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from student_info
        where  id = #{id,jdbcType=BIGINT} 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from student_info
        where  id = #{id,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.geekaca.stu.domain.StudentInfo" useGeneratedKeys="true">
        insert into student_info
        ( id,name,password
        ,gender,age,code
        ,class_id)
        values (#{id,jdbcType=BIGINT},#{name,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR}
        ,#{gender,jdbcType=VARCHAR},#{age,jdbcType=INTEGER},#{code,jdbcType=INTEGER}
        ,#{classId,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.geekaca.stu.domain.StudentInfo" useGeneratedKeys="true">
        insert into student_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="name != null">name,</if>
                <if test="password != null">password,</if>
                <if test="gender != null">gender,</if>
                <if test="age != null">age,</if>
                <if test="code != null">code,</if>
                <if test="classId != null">class_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=BIGINT},</if>
                <if test="name != null">#{name,jdbcType=VARCHAR},</if>
                <if test="password != null">#{password,jdbcType=VARCHAR},</if>
                <if test="gender != null">#{gender,jdbcType=VARCHAR},</if>
                <if test="age != null">#{age,jdbcType=INTEGER},</if>
                <if test="code != null">#{code,jdbcType=INTEGER},</if>
                <if test="classId != null">#{classId,jdbcType=VARCHAR},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.geekaca.stu.domain.StudentInfo">
        update student_info
        <set>
                <if test="name != null">
                    name = #{name,jdbcType=VARCHAR},
                </if>
                <if test="password != null">
                    password = #{password,jdbcType=VARCHAR},
                </if>
                <if test="gender != null">
                    gender = #{gender,jdbcType=VARCHAR},
                </if>
                <if test="age != null">
                    age = #{age,jdbcType=INTEGER},
                </if>
                <if test="code != null">
                    code = #{code,jdbcType=INTEGER},
                </if>
                <if test="classId != null">
                    class_id = #{classId,jdbcType=VARCHAR},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.geekaca.stu.domain.StudentInfo">
        update student_info
        set 
            name =  #{name,jdbcType=VARCHAR},
            password =  #{password,jdbcType=VARCHAR},
            gender =  #{gender,jdbcType=VARCHAR},
            age =  #{age,jdbcType=INTEGER},
            code =  #{code,jdbcType=INTEGER},
            class_id =  #{classId,jdbcType=VARCHAR}
        where   id = #{id,jdbcType=BIGINT} 
    </update>
</mapper>
