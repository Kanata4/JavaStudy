<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    namespace:名称空间
    告诉mybatis 到哪里去找mapper类
-->


<mapper namespace="com.geekaca.mybatis.mapper.BrandMapper">

    <!--    结果集映射
  当数据库列名字，和java对象属性 不对应时候

  通过resultMap节点，告诉mybatis如何对应
-->
    <resultMap id="brandResultMap" type="com.geekaca.mybatis.pojo.Brand">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="brand_name" property="brandName"/>
        <result column="company_name" property="companyName"/>
    </resultMap>
    <insert id="add" useGeneratedKeys="true" keyColumn="id">
        insert into tb_brand(brand_name, company_name, ordered, description, status)
        value (#{brandName},#{companyName},#{ordered},#{description},#{status});
    </insert>

    <update id="update">
        update tb_brand
        <set>
            <if test="brandName != null and brandName != '' ">
                brand_name = #{brandName},
            </if>
            <if test="companyName != null and companyName != '' ">
                company_name = #{companyName},
            </if>
            <if test="ordered != null">
                ordered = #{ordered},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="status != null">
            </if>
        </set>
        where id = #{id};
    </update>

    <delete id="deleteById">
        delete from tb_brand where id = #{id};
    </delete>

    <delete id="deleteByIds">
        delete from tb_brand where id
        in
        <foreach collection="array" item="id" separator="," open="(" close= ")">
            #{id}
        </foreach>
        ;
    </delete>

    <!-- sql 语句 -->
    <!--    用来发送select  sql语句
    resultType : 查询的结果，每一行记录 对应的java对象
    resultMap 告诉mybatis结果 如何映射
-->
    <select id="selectAll" resultMap="brandResultMap">
        select *
        from tb_brand
    </select>
    <select id="selectById" resultMap="brandResultMap">
        select *
        from tb_brand
        where id
           <![CDATA[ <
         ]]> #{id};
    </select>
    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="companyName != null and companyName != '' ">
                and company_name like #{companyName}
            </if>
            <if test="brandName != null and brandName != '' ">
                and brand_name like #{brandName};
            </if>
        </where>


    </select>
    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
            <choose>
                <when test="status != null">
                    status = #{status}
                </when>
                <when test="companyName != null and companyName != '' ">
                    company_name like #{companyName}
                </when>
                <when test="brandName != null and brandName != '' ">
                    brand_name like #{brandName}
                </when>
            </choose>
        </where>
    </select>
</mapper>